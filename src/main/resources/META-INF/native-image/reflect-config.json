[
  {
    "name": "[B"
  },
  {
    "name": "[C"
  },
  {
    "name": "[D"
  },
  {
    "name": "[F"
  },
  {
    "name": "[I"
  },
  {
    "name": "[J"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Lcom.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry;"
  },
  {
    "name": "[Lio.micronaut.http.HttpMethod;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljava.sql.Statement;"
  },
  {
    "name": "[Ljavax.management.openmbean.CompositeData;"
  },
  {
    "name": "[Lsun.security.pkcs.SignerInfo;"
  },
  {
    "name": "[S"
  },
  {
    "name": "[Z"
  },
  {
    "name": "apple.security.AppleProvider",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
    "queryAllPublicMethods": true,
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "setWithJansi", "parameterTypes": ["boolean"] }
    ]
  },
  {
    "name": "ch.qos.logback.core.OutputStreamAppender",
    "methods": [
      {
        "name": "setEncoder",
        "parameterTypes": ["ch.qos.logback.core.encoder.Encoder"]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
    "methods": [
      {
        "name": "setParent",
        "parameterTypes": ["ch.qos.logback.core.spi.ContextAware"]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
    "methods": [
      { "name": "setPattern", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "ch.qos.logback.core.pattern.color.CyanCompositeConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.core.pattern.color.GrayCompositeConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "ch.qos.logback.core.pattern.color.MagentaCompositeConverter",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.aayushatharva.brotli4j.Brotli4jLoader"
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.google.common.jimfs.SystemJimfsFileSystemProvider",
    "methods": [
      { "name": "removeFileSystemRunnable", "parameterTypes": ["java.net.URI"] }
    ]
  },
  {
    "name": "com.google.protobuf.ExtensionRegistry",
    "methods": [{ "name": "getEmptyRegistry", "parameterTypes": [] }]
  },
  {
    "name": "com.lmax.disruptor.Value",
    "fields": [{ "name": "value" }]
  },
  {
    "name": "com.mysql.cj.conf.url.SingleConnectionUrl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.mysql.cj.conf.ConnectionUrlParser",
          "java.util.Properties"
        ]
      }
    ]
  },
  {
    "name": "com.mysql.cj.jdbc.AbandonedConnectionCleanupThread"
  },
  {
    "name": "com.mysql.cj.jdbc.Driver",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.mysql.cj.log.StandardLogger",
    "methods": [{ "name": "<init>", "parameterTypes": ["java.lang.String"] }]
  },
  {
    "name": "com.mysql.cj.protocol.StandardSocketFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.DESCipher",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.DESedeCipher",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.crypto.provider.TlsPrfGenerator$V12",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.sun.management.GarbageCollectorMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.GcInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.HotSpotDiagnosticMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.ThreadMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.UnixOperatingSystemMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.VMOption",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.internal.GarbageCollectorExtImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotDiagnostic",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotThreadImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.OperatingSystemImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "com.theokanning.openai.Usage",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "setCompletionTokens", "parameterTypes": ["long"] },
      { "name": "setPromptTokens", "parameterTypes": ["long"] },
      { "name": "setTotalTokens", "parameterTypes": ["long"] }
    ]
  },
  {
    "name": "com.theokanning.openai.completion.CompletionChoice",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "setFinish_reason", "parameterTypes": ["java.lang.String"] },
      { "name": "setIndex", "parameterTypes": ["java.lang.Integer"] },
      {
        "name": "setLogprobs",
        "parameterTypes": ["com.theokanning.openai.completion.LogProbResult"]
      },
      { "name": "setText", "parameterTypes": ["java.lang.String"] }
    ]
  },
  {
    "name": "com.theokanning.openai.completion.CompletionRequest",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "getBestOf", "parameterTypes": [] },
      { "name": "getEcho", "parameterTypes": [] },
      { "name": "getFrequencyPenalty", "parameterTypes": [] },
      { "name": "getLogitBias", "parameterTypes": [] },
      { "name": "getLogprobs", "parameterTypes": [] },
      { "name": "getMaxTokens", "parameterTypes": [] },
      { "name": "getModel", "parameterTypes": [] },
      { "name": "getN", "parameterTypes": [] },
      { "name": "getPresencePenalty", "parameterTypes": [] },
      { "name": "getPrompt", "parameterTypes": [] },
      { "name": "getStop", "parameterTypes": [] },
      { "name": "getStream", "parameterTypes": [] },
      { "name": "getSuffix", "parameterTypes": [] },
      { "name": "getTemperature", "parameterTypes": [] },
      { "name": "getTopP", "parameterTypes": [] },
      { "name": "getUser", "parameterTypes": [] }
    ]
  },
  {
    "name": "com.theokanning.openai.completion.CompletionResult",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      { "name": "<init>", "parameterTypes": [] },
      { "name": "setChoices", "parameterTypes": ["java.util.List"] },
      { "name": "setCreated", "parameterTypes": ["long"] },
      { "name": "setId", "parameterTypes": ["java.lang.String"] },
      { "name": "setModel", "parameterTypes": ["java.lang.String"] },
      { "name": "setObject", "parameterTypes": ["java.lang.String"] },
      { "name": "setUsage", "parameterTypes": ["com.theokanning.openai.Usage"] }
    ]
  },
  {
    "name": "com.theokanning.openai.completion.LogProbResult",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.typesafe.config.Config"
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "allDeclaredFields": true
  },
  {
    "name": "elide.runtime.gvm.$VMFacadeFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.cfg.$GuestIOConfiguration$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.cfg.$GuestVMConfiguration$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.cfg.$GuestVMEEConfig$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.cfg.$GuestVMEESandboxConfig$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.cfg.$GuestVMInspectConfig$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.cfg.$JsRuntimeConfig$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.cfg.$JsRuntimeConfig$JsEsmConfig$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.cfg.$JsRuntimeConfig$JsNpmConfig$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.$GuestExecutorManager$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.$IntrinsicsManager$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.context.$NativeContextManagerImpl$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.$BuiltinIntrinsicsResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.$ServiceIntrinsicsResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.base64.$Base64Intrinsic$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.base64.$Base64Intrinsic$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.console.$ConsoleIntrinsic$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.console.$ConsoleIntrinsic$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.fetch.$FetchIntrinsic$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.fetch.$FetchIntrinsic$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.stream.$CoreStreamsIntrinsic$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.stream.$CoreStreamsIntrinsic$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.url.$URLIntrinsic$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.url.$URLIntrinsic$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.url.$URLSearchParamsIntrinsic$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.url.$URLSearchParamsIntrinsic$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.webstreams.$ReadableStreamIntrinsic$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.intrinsics.js.webstreams.$ReadableStreamIntrinsic$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.js.$JsRuntime$Companion$JsRuntimeVFSConfigurator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.js.$JsRuntime$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.vfs.$EmbeddedGuestVFSImpl$EmbeddedVFSConfigurationFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.vfs.$EmbeddedGuestVFSImpl$EmbeddedVFSConfigurationFactory$Spawn$graalvm0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.vfs.$GuestVFSPolicy$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.vfs.$HostVFSImpl$HostVFSConfigurationFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.runtime.gvm.internals.vfs.$HostVFSImpl$HostVFSConfigurationFactory$Spawn$graalvm0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.$Application$AppStartupListener$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.assets.$AssetController$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.assets.$ServerAssetIndex$AssetStartupListener$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.assets.$ServerAssetIndex$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.assets.$ServerAssetManager$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.assets.$ServerAssetManifestProvider$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.assets.$ServerAssetReader$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.assets.ServerAssetIndex$AssetStartupListener",
    "fields": [{ "name": "beanContext" }]
  },
  {
    "name": "elide.server.cfg.$AssetConfig$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.cfg.$ServerConfig$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.cfg.ServerConfigurator",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.controller.builtin.$NotFoundController$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.controller.builtin.$ServerErrorController$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.http.$HeaderFinalizingFilter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.http.$RequestContextFilter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.runtime.$AppExecutor$DefaultExecutor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "elide.server.runtime.jvm.$UncaughtExceptionHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.github.sgammon.$PlanetscaleAiController$ColumnSchema$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.github.sgammon.$PlanetscaleAiController$ColumnType$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.github.sgammon.$PlanetscaleAiController$Definition$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.github.sgammon.$PlanetscaleAiController$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.github.sgammon.$PlanetscaleAiController$DisambiguationError$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.github.sgammon.$PlanetscaleAiController$FailedToTranslateQueryError$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.github.sgammon.$PlanetscaleAiController$ListDatabaseNamesResponse$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.github.sgammon.$PlanetscaleAiController$ListTableNamesResponse$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.github.sgammon.$PlanetscaleAiController$NaturalLanguageQueryResponse$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.github.sgammon.$PlanetscaleAiController$NoDatabasesAvailableError$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.github.sgammon.$PlanetscaleAiController$TableSchemaResponse$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.github.sgammon.PlanetscaleAiController",
    "fields": [{ "name": "connection" }]
  },
  {
    "name": "io.methvin.watchservice.MacOSXListeningWatchService"
  },
  {
    "name": "io.micronaut.aop.internal.InterceptorRegistryBean",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.buffer.netty.$DefaultByteBufAllocatorConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.buffer.netty.$NettyByteBufferFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.$AsyncCacheErrorHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.$DefaultCacheErrorHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.$DefaultCacheManager$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.caffeine.$DefaultCacheConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.caffeine.$DefaultDynamicCacheManager$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.caffeine.$DefaultSyncCache$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.caffeine.metrics.$CaffeineCacheMetricsBinder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.discovery.$BeanConfiguration",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.discovery.$CachingCompositeDiscoveryClient$Definition$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.discovery.$CachingCompositeDiscoveryClient$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.discovery.$DiscoveryClientCacheConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.interceptor.$CacheInterceptor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.interceptor.$DefaultCacheKeyGenerator$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.interceptor.$KotlinSuspendFunCacheKeyGenerator$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.jcache.$JCacheManager$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.cache.jcache.metrics.$JCacheMetricsBinder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.configuration.jdbc.hikari.$BeanConfiguration",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.configuration.jdbc.hikari.$DatasourceConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.configuration.jdbc.hikari.$DatasourceFactory$DataSource0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.configuration.jdbc.hikari.$DatasourceFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.context.annotation.Prototype"
  },
  {
    "name": "io.micronaut.context.env.PropertiesPropertySourceLoader",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.context.env.hocon.HoconPropertySourceLoader",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.context.env.hocon.HoconPropertySourceLoaderImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.context.env.yaml.YamlPropertySourceLoader",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.context.event.ApplicationEventPublisherFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.core.async.publisher.Publishers"
  },
  {
    "name": "io.micronaut.data.jdbc.config.$DataJdbcConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.jdbc.config.$SchemaGenerator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$FromOracleDateToInstant2$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$FromOracleDateToLocalDateTime1$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$FromOracleDateToTimestamp0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$FromOracleTimestampToInstant5$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$FromOracleTimestampToLocalDateTime4$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.jdbc.convert.vendor.$OracleTypeConvertersFactory$FromOracleTimestampToTimestamp3$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.jdbc.operations.$DefaultJdbcRepositoryOperations$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.jdbc.operations.$DefaultJdbcSchemaHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.jdbc.transaction.$TransactionManagersFactory$BuildAsyncTransactionOperations0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.jdbc.transaction.$TransactionManagersFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.$DefaultPage$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.$DefaultPageable$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.$DefaultSlice$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.$DefaultSort$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.$Page$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.$Pageable$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.$Slice$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.$Sort$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.$Sort$Order$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.naming.$NamingStrategies$KebabCase$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.naming.$NamingStrategies$LowerCase$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.naming.$NamingStrategies$Raw$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.naming.$NamingStrategies$UnderScoreSeparatedLowerCase$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.naming.$NamingStrategies$UnderScoreSeparatedUpperCase$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.naming.$NamingStrategies$UpperCase$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.query.builder.$AbstractSqlLikeQueryBuilder$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.query.builder.jpa.$JpaQueryBuilder$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.model.query.builder.sql.$SqlQueryBuilder$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.config.$DataConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.config.$DataConfiguration$PageableConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.convert.$DataConversionServiceFactory$Build0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.convert.$DataConversionServiceFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.criteria.$RuntimeCriteriaBuilder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.criteria.metamodel.$StaticMetamodelInitializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.date.$CurrentDateTimeProvider$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.event.$EntityEventRegistry$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.event.listeners.$AnnotatedMethodInvokingEntityEventListener$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.event.listeners.$AutoTimestampEntityEventListener$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.event.listeners.$UUIDGeneratingEntityEventListener$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.event.listeners.$VersionGeneratingEntityEventListener$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.http.$PageableRequestArgumentBinder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$AbstractQueryInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DataInterceptorResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DataIntroductionAdvice$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultCountInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultDeleteAllInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultDeleteOneInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultExistsByInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultFindAllInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultFindByIdInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultFindOneInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultFindOptionalInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultFindPageInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultFindSliceInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultFindStreamInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultSaveAllInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultSaveEntityInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultSaveOneInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultUpdateAllEntitiesInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultUpdateEntityInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.$DefaultUpdateInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$AbstractAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$AbstractConvertCompletionStageInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$AbstractCountConvertCompletionStageInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultCountAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultDeleteAllAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultDeleteOneAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultExistsByAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultFindAllAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultFindByIdAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultFindOneAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultFindPageAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultFindSliceAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultSaveAllAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultSaveEntityInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultSaveOneAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultUpdateAllAsyncEntitiesInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultUpdateAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.async.$DefaultUpdateEntityAsyncInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.$AbstractSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.$CountSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.$DeleteAllSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.$ExistsSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.$FindAllSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.$FindOneSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.$FindPageSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.$UpdateAllSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.async.$AbstractAsyncSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.async.$CountAsyncSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.async.$DeleteAllAsyncSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.async.$ExistsAsyncSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.async.$FindAllAsyncSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.async.$FindOneAsyncSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.async.$FindPageAsyncSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.async.$UpdateAllAsyncSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$AbstractReactiveSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$CountReactiveSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$DeleteAllReactiveSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$ExistsReactiveSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$FindAllReactiveSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$FindOneReactiveSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$FindPageReactiveSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.criteria.reactive.$UpdateAllReactiveSpecificationInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$AbstractCountOrEntityPublisherInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$AbstractPublisherInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$AbstractReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultCountReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultDeleteAllReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultDeleteOneReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultExistsByReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindAllReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindByIdReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindOneReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindPageReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultFindSliceReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultSaveAllReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultSaveEntityReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultSaveOneReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateAllEntitiesReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateEntityReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateReactiveInterceptor$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.multitenancy.conf.$DataSourceMultiTenancyEnabledCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.multitenancy.conf.$DiscriminatorMultiTenancyEnabledCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.multitenancy.conf.$MultiTenancyConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.multitenancy.conf.$SchemaMultiTenancyEnabledCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.multitenancy.internal.$DefaultDataSourceTenantResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.multitenancy.internal.$DefaultSchemaTenantResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.multitenancy.internal.$DefaultTenantResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.multitenancy.internal.$DefaultTransactionDataSourceTenantResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.operations.$DefaultRepositoryOperationsRegistry$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.support.$DefaultRuntimeEntityRegistry$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.support.convert.$DefaultAttributeConverterRegistry$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.support.convert.convert.jpa.$JakartaAttributeConverterProvider$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.data.runtime.support.convert.convert.jpa.$JxAttributeConverterProvider$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.discovery.$DefaultCompositeDiscoveryClient$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.discovery.$DefaultServiceInstanceIdGenerator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.discovery.config.$DefaultCompositeConfigurationClient$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.health.$DefaultCurrentHealthStatus$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.health.$HealthStatus$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.health.$HeartbeatConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.health.$HeartbeatDiscoveryClientCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.health.$HeartbeatTask$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.MediaTypeConvertersRegistrar",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.bind.$DefaultRequestBinderRegistry$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$BeanConfiguration",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultConnectionPoolConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$DefaultHttpClientConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$DefaultLoadBalancerResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$ServiceHttpClientCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceConnectionPoolConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$ServiceHttpClientFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$ServiceHttpClientFactory$HealthCheckStarter1$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.$ServiceHttpClientFactory$ServiceInstanceList0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.bind.$DefaultHttpClientBinderRegistry$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.filter.$DefaultHttpClientFilterResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.interceptor.$HttpClientIntroductionAdvice$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.interceptor.configuration.$DefaultClientVersioningConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.interceptor.configuration.$NamedClientVersioningConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.loadbalance.$DiscoveryClientLoadBalancerFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.loadbalance.$LoadBalancerConverters$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.loadbalance.$ServiceInstanceListLoadBalancerFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$HttpClient0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.netty.ConnectionManager$HttpClientInitializer"
  },
  {
    "name": "io.micronaut.http.client.netty.ConnectionManager$HttpClientInitializer$1"
  },
  {
    "name": "io.micronaut.http.client.netty.ConnectionManager$HttpClientInitializer$4",
    "methods": [
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.micronaut.http.client.netty.DefaultHttpClient$FullHttpResponseHandler",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.micronaut.http.client.netty.NettyClientHttpRequestFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.client.netty.ssl.$NettyClientSslBuilder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.codec.$CodecConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.converters.$HttpConverterRegistrar$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.cookie.$SameSiteConverter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.hateoas.$AbstractResource$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.hateoas.$DefaultLink$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.hateoas.$GenericResource$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.hateoas.$JsonError$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.hateoas.$Resource$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.hateoas.$VndError$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$DefaultEventLoopGroup1$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$EventLoopGroup0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.$EpollAvailabilityCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.$EpollEventLoopGroupFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.$KQueueAvailabilityCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.$KQueueEventLoopGroupFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.$NettyThreadFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.$NettyThreadFactory$NettyThreadFactory0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.$NioEventLoopGroupFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.converters.$DefaultChannelOptionFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.converters.$EpollChannelOptionFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.channel.converters.$KQueueChannelOptionFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.configuration.$NettyGlobalConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.stream.HttpStreamsClientHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.micronaut.http.netty.stream.HttpStreamsServerHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.micronaut.http.netty.websocket.$NettyServerWebSocketBroadcaster$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.netty.websocket.$WebSocketMessageEncoder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.resource.$ResourceLoaderFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.$CoroutineHelper$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.$HttpServerConfiguration$CorsConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.$HttpServerConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.$HttpServerConfiguration$HostResolutionConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.$HttpServerConfiguration$HttpLocaleResolutionConfigurationProperties$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.$HttpServerConfiguration$MultipartConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.$RouteExecutor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.binding.$BasicAuthArgumentBinder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.binding.$LocaleArgumentBinder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.binding.$RequestArgumentSatisfier$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.codec.$TextStreamCodec$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.context.$ServerRequestContextInstrumentation$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.cors.$CorsFilter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.cors.$CorsOriginConverter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.exceptions.$ContentLengthExceededHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.exceptions.$ConversionErrorHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.exceptions.$DuplicateRouteHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.exceptions.$HttpStatusHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.exceptions.$JsonExceptionHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.exceptions.$URISyntaxHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.exceptions.$UnsatisfiedArgumentHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.exceptions.$UnsatisfiedRouteHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.exceptions.response.$HateoasErrorResponseProcessor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.exceptions.response.$HateoasErrorResponseProcessorReplacement$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.$DefaultHttpCompressionStrategy$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.$DefaultHttpContentProcessorResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.$FormDataHttpContentSubscriberFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.$NettyEmbeddedServerInstance$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.NettyHttpResponseFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.NettyHttpServer$1"
  },
  {
    "name": "io.micronaut.http.server.netty.NettyHttpServer$Listener"
  },
  {
    "name": "io.micronaut.http.server.netty.RoutingInBoundHandler",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.micronaut.http.server.netty.SmartHttpContentCompressor"
  },
  {
    "name": "io.micronaut.http.server.netty.binders.$NettyBinderRegistrar$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.binders.$PublisherBodyBinder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$AccessLogger$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$FileTypeHandlerConfiguration$CacheControlConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$FileTypeHandlerConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Http2Settings$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$NettyListenerConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Parent$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Worker$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.converters.$NettyConverters$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.converters.NettyConvertersSpi",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.decoders.HttpRequestDecoder"
  },
  {
    "name": "io.micronaut.http.server.netty.encoders.HttpResponseEncoder"
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.HttpAccessLogHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.BytesSentElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.CookieElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.DateTimeElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.ElapseTimeElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.HeaderElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.LocalHostElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.LocalIpElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.LocalPortElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.NotImplementedElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.RemoteHostElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.RemoteIpElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.RequestLineElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.RequestMethodElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.RequestProtocolElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.RequestUriElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.handler.accesslog.element.ResponseCodeElementBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.jackson.$JsonHttpContentSubscriberFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.jackson.$JsonViewMediaTypeCodecFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.jackson.$JsonViewServerFilter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.ssl.$BuildSelfSignedCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilder$SelfSignedNotConfigured$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilder$SelfSignedConfigured$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.ssl.$SslEnabledCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.types.files.$FileTypeHandlerConfiguration$CacheControlConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.types.files.$FileTypeHandlerConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.netty.websocket.NettyServerWebSocketUpgradeHandler",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      }
    ]
  },
  {
    "name": "io.micronaut.http.server.util.$DefaultHttpClientAddressResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.util.$DefaultHttpHostResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.util.locale.$CompositeHttpLocaleResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.util.locale.$CookieLocaleResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.util.locale.$HttpFixedLocaleResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.util.locale.$HttpLocalizedMessageSource$Definition$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.util.locale.$HttpLocalizedMessageSource$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.util.locale.$RequestLocaleResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.server.websocket.$ServerWebSocketProcessor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.ssl.$ClientSslConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.ssl.$ServerSslConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.http.util.$OutgoingHttpRequestProcessorImpl$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.inject.annotation.AnnotationConvertersRegistrar",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.inject.provider.BeanProviderDefinition",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.inject.provider.JakartaProviderBeanDefinition",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.inject.provider.JavaxProviderBeanDefinition"
  },
  {
    "name": "io.micronaut.jackson.$BeanConfiguration",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.$JacksonConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.$ObjectMapperFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.$ObjectMapperFactory$JsonFactory0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.$ObjectMapperFactory$ObjectMapper1$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.codec.$JsonMediaTypeCodec$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.core.env.CloudFoundryVcapApplicationPropertySourceLoader",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.core.env.CloudFoundryVcapServicesPropertySourceLoader",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.core.env.EnvJsonPropertySourceLoader",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.core.env.JsonPropertySourceLoader",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.databind.$DatabindPropertyBinderExceptionHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.databind.$JacksonDatabindMapper$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.databind.convert.$JacksonConverterRegistrar$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.kotlin.$KotlinModuleFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.kotlin.$KotlinModuleFactory$KotlinModuleFactory0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.modules.$BeanIntrospectionModule$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.serialize.$ConvertibleMultiValuesSerializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.serialize.$ConvertibleValuesSerializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.serialize.$JacksonObjectSerializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.serialize.$JsonNodeDeserializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.serialize.$JsonNodeSerializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.serialize.$OptionalValuesSerializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.serialize.$ResourceModule$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jackson.serialize.$ResourceSerializerModifier$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jdbc.spring.$DataSourceTransactionManagerFactory$DataSourceTransactionManager0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jdbc.spring.$DataSourceTransactionManagerFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jdbc.spring.$DataSourceTransactionManagerFactory$TransactionAwareDataSourceListener1$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jdbc.spring.$DataSourceTransactionManagerFactory$TransactionAwareDataSourceListenerUnwrapper2$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jdbc.spring.$HibernatePresenceCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.jdbc.spring.$SpringDataSourceResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.json.$JsonObjectSerializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.json.bind.$JsonBeanPropertyBinder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.json.codec.$JsonMediaTypeCodec$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.json.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.json.convert.$JsonConverterRegistrar$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.logging.$LogLevel$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.logging.$PropertiesLoggingLevelsConfigurer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.logging.impl.$Log4jLoggingSystem$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.logging.impl.$LogbackLoggingSystem$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.$BeanConfiguration",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.$EndpointConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.$EndpointDefaultConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.$EndpointEnabledCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.$EndpointSensitivityProcessor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.$EndpointsFilter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.beans.$BeansEndpoint$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.beans.impl.$DefaultBeanDefinitionData$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.beans.impl.$DefaultBeanDefinitionDataCollector$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.env.$EnvironmentEndpoint$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.health.$HealthEndpoint$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.health.$HealthEndpoint$StatusConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.health.filter.$HealthResultFilter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.info.$InfoEndpoint$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.info.impl.$ReactiveInfoAggregator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.info.source.$BuildInfoSource$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.info.source.$ConfigurationInfoSource$Definition$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.info.source.$ConfigurationInfoSource$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.info.source.$GitInfoSource$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.loggers.$LoggersEndpoint$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.loggers.impl.$DefaultLoggersManager$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.loggers.impl.$Log4jLoggingSystem$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.loggers.impl.$LogbackLoggingSystem$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.processors.$DeleteEndpointRouteBuilder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.processors.$ReadEndpointRouteBuilder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.processors.$WriteEndpointRouteBuilder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.refresh.$RefreshEndpoint$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.routes.$RoutesEndpoint$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.routes.impl.$DefaultRouteData$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.routes.impl.$DefaultRouteDataCollector$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.stop.$ServerStopEndpoint$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.threads.$ThreadDumpEndpoint$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.endpoint.threads.impl.$DefaultThreadInfoMapper$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.health.aggregator.$DefaultHealthAggregator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.health.indicator.$DefaultHealthResult$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.health.indicator.discovery.$DiscoveryClientHealthIndicator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.health.indicator.discovery.$DiscoveryClientHealthIndicatorConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.health.indicator.diskspace.$DiskSpaceIndicator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.health.indicator.diskspace.$DiskSpaceIndicatorConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.health.indicator.jdbc.$JdbcIndicator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.health.indicator.service.$ServiceReadyHealthIndicator$ApplicationEventListener$onServerStarted2$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.health.indicator.service.$ServiceReadyHealthIndicator$ApplicationEventListener$onServiceStarted1$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.health.indicator.service.$ServiceReadyHealthIndicator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.management.health.monitor.$HealthMonitorTask$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.protobuf.codec.$ExtensionRegistryFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.protobuf.codec.$ExtensionRegistryFactory$ExtensionRegistry0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.protobuf.codec.$ProtobufferCodec$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.protobuf.convert.$ByteBufToProtoMessageConverter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.protobuf.convert.$ProtoMessageToByteBufConverter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.reactive.flow.converters.$FlowConverterRegistrar$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.reactive.reactor.instrument.$ReactorInstrumentation$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.reactive.reactor.instrument.$ReactorInstrumentation$ReactorInstrumenterFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.retry.annotation.$DefaultRetryPredicate$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.retry.intercept.$DefaultRetryInterceptor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.retry.intercept.$RecoveryInterceptor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.$ApplicationConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.$ApplicationConfiguration$InstanceConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.context.$CompositeMessageSource$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.context.env.$ConfigurationIntroductionAdvice$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.context.scope.$ThreadLocalCustomScope$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.context.scope.refresh.$RefreshInterceptor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.context.scope.refresh.$RefreshScope$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.converters.reactive.$ReactiveTypeConverterRegistrar$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.converters.time.TimeConverterRegistrar",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.http.codec.$TextPlainCodec$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.http.scope.$RequestCustomScope$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.runtime.server.watch.event.$FileWatchRestartListener$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.$DefaultTaskExceptionHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.async.$AsyncInterceptor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.executor.$DefaultExecutorSelector$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.executor.$DefaultThreadFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.executor.$ExecutorFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Configuration0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.executor.$UserExecutorConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.executor.$UserExecutorConfiguration$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.instrument.$ExecutorServiceInstrumenter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.io.watch.$DefaultWatchThread$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.io.watch.$FileWatchCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.io.watch.$FileWatchConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.io.watch.$WatchServiceFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.io.watch.osx.$MacOsWatchServiceFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.io.watch.osx.$MacOsWatchServiceFactory$MacWatchService0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.io.watch.osx.$MacOsWatchThread$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.config.$DeserializationConfiguration$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.config.$SerdeConfiguration$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.config.$SerializationConfiguration$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.jackson.$JacksonJsonMapper$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.$AdditionalSerdes$IntrospectionRef0",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.$AdditionalSerdes$IntrospectionRef1",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.$AdditionalSerdes$IntrospectionRef2",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.$AdditionalSerdes$IntrospectionRef3",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.$DefaultSerdeIntrospections$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.$DefaultSerdeRegistry$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.bind.$SerdeJsonBeanPropertyBinderExceptionHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.config.$SerdeJsonConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$ArrayDequeDeserializer2$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$ArrayListDeserializer1$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$DefaultSetDeserializer5$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$HashSetDeserializer4$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$LinkedHashMapDeserializer8$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$LinkedHashSetDeserializer6$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$LinkedListDeserializer3$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$OptionalDeserializer10$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$StringDeserializer0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$TreeMapDeserializer9$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$CoreDeserializers$TreeSetDeserializer7$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.deserializers.$ObjectDeserializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$CoreSerdes$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$CoreSerdes$DurationSerde1$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$CoreSerdes$ObjectArraySerde0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$CoreSerdes$PeriodSerde2$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$DateSerde$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$EnumSerde$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$EnumSetDeserializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$HealthStatusSerde$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$InstantSerde$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$LocalDateSerde$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$LocalDateTimeSerde$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$LocalTimeSerde$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$OffsetDateTimeSerde$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$SqlDateSerde$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$SqlTimestampSerde$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$YearSerde$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serdes.$ZonedDateTimeSerde$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serializers.$CoreSerializers$BooleanSerializer3$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serializers.$CoreSerializers$CharSequenceSerializer0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serializers.$CoreSerializers$CharSerializer2$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serializers.$CoreSerializers$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serializers.$CoreSerializers$MapSerializer4$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serializers.$CoreSerializers$StringSerializer1$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serializers.$IterableSerializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serializers.$ObjectSerializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serializers.$OptionalMultiValuesSerializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serializers.$OptionalSerializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serializers.$OptionalValuesSerializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.serde.support.serializers.$StreamSerializer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.test.condition.$TestActiveCondition$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.test.support.server.$TestEmbeddedServer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.test.support.server.$TestExecutableEmbeddedServer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.testresources.client.TestResourcesClientPropertyExpressionResolver",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.testresources.client.TestResourcesClientPropertySourceLoader",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.interceptor.$CoroutineTxHelper$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.interceptor.$ReactorCoroutineTxHelper$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.interceptor.$TransactionalEventInterceptor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.interceptor.$TransactionalInterceptor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.interceptor.$TxCompletionStageDataIntroductionHelper$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.jdbc.$DataSourceTransactionManager$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.jdbc.$DelegatingDataSourceResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.jdbc.$TransactionAwareDataSource$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.jdbc.$TransactionalConnection$Intercepted$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.jdbc.$TransactionalConnectionInterceptor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.support.$DefaultTransactionOperationsRegistry$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.test.$DefaultTestTransactionExecutionListener$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.transaction.test.$SpockMethodTransactionDefinitionProvider$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.$ValidatingInterceptor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.exceptions.$ConstraintExceptionHandler$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.validator.$DefaultClockProvider$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.validator.$DefaultValidator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.validator.$DefaultValidatorConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.validator.$DefaultValidatorFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.validator.constraints.$EmailValidator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.validator.constraints.$PatternValidator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.validator.extractors.$DefaultValueExtractors$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.validator.extractors.$DefaultValueExtractors$IntrospectionRef",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.validator.messages.$DefaultValidationMessages$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.validation.validator.resolver.$CompositeTraversableResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.$BeanConfiguration",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.$DefaultViewsModelDecorator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.$DefaultViewsRendererLocator$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.$DefaultViewsResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.$ViewsConfigurationProperties$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.$ViewsFilter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.csp.$BeanConfiguration",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.csp.$CspConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.csp.$CspFilter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.model.security.$BeanConfiguration",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.model.security.$SecurityViewModelProcessor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.model.security.$SecurityViewModelProcessorConfigurationProperties$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.turbo.$DefaultTurboFrameRenderer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.views.turbo.$DefaultTurboStreamRenderer$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.$AnnotatedFilterRouteBuilder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.$AnnotatedMethodRouteBuilder$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.$DefaultRouter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.naming.$ConfigurableUriNamingStrategy$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.naming.$HyphenatedUriNamingStrategy$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.resource.$StaticResourceConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.resource.$StaticResourceResolverFactory$Build0$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.resource.$StaticResourceResolverFactory$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.version.$ConfigurationDefaultVersionProvider$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.version.$RouteVersionFilter$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.version.$RoutesVersioningConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.version.$VersionAwareRouterListener$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.version.resolution.$HeaderVersionResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.version.resolution.$HeaderVersionResolverConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.version.resolution.$ParameterVersionResolver$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.web.router.version.resolution.$ParameterVersionResolverConfiguration$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.micronaut.websocket.interceptor.$ClientWebSocketInterceptor$Definition$Reference",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "io.netty.bootstrap.ServerBootstrap$1"
  },
  {
    "name": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields": [{ "name": "refCnt" }]
  },
  {
    "name": "io.netty.channel.ChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "read",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelHandlerAdapter",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelOutboundHandlerAdapter",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "read",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      }
    ]
  },
  {
    "name": "io.netty.channel.CombinedChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "read",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "read",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultFileRegion"
  },
  {
    "name": "io.netty.channel.SimpleChannelInboundHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
  },
  {
    "name": "io.netty.channel.unix.PeerCredentials"
  },
  {
    "name": "io.netty.handler.codec.MessageAggregator",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageCodec",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageDecoder",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageEncoder",
    "methods": [
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.HttpClientCodec"
  },
  {
    "name": "io.netty.handler.codec.http.HttpContentDecoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.HttpContentDecompressor"
  },
  {
    "name": "io.netty.handler.codec.http.HttpContentEncoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.HttpServerCodec"
  },
  {
    "name": "io.netty.handler.codec.http.HttpServerKeepAliveHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketServerCompressionHandler"
  },
  {
    "name": "io.netty.handler.flow.FlowControlHandler",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "read",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      }
    ]
  },
  {
    "name": "io.netty.handler.stream.ChunkedWriteHandler",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "flush",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.timeout.IdleStateHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelInactive",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": ["io.netty.channel.ChannelHandlerContext"]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.timeout.ReadTimeoutHandler"
  },
  {
    "name": "io.netty.internal.tcnative.CertificateCallback"
  },
  {
    "name": "io.netty.internal.tcnative.CertificateCallbackTask"
  },
  {
    "name": "io.netty.internal.tcnative.SSLContext"
  },
  {
    "name": "io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask"
  },
  {
    "name": "io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask"
  },
  {
    "name": "io.netty.internal.tcnative.SSLPrivateKeyMethodTask"
  },
  {
    "name": "io.netty.internal.tcnative.SSLTask"
  },
  {
    "name": "io.netty.util.AbstractReferenceCounted",
    "fields": [{ "name": "refCnt" }]
  },
  {
    "name": "io.netty.util.ReferenceCountUtil",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.util.internal.NativeLibraryUtil",
    "methods": [
      {
        "name": "loadLibrary",
        "parameterTypes": ["java.lang.String", "boolean"]
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [{ "name": "producerLimit" }]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [{ "name": "consumerIndex" }]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [{ "name": "producerIndex" }]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "fields": [{ "name": "consumerIndex" }]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "fields": [{ "name": "producerIndex" }]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "fields": [{ "name": "producerLimit" }]
  },
  {
    "name": "io.reactivex.Completable"
  },
  {
    "name": "io.reactivex.Maybe"
  },
  {
    "name": "io.reactivex.Observable"
  },
  {
    "name": "io.reactivex.Single"
  },
  {
    "name": "java.io.FileDescriptor"
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Boolean",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Byte",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Character",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.ClassValue"
  },
  {
    "name": "java.lang.Comparable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Deprecated",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Double",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.lang.Exception"
  },
  {
    "name": "java.lang.Float",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.IllegalArgumentException"
  },
  {
    "name": "java.lang.Integer",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.Long",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.NullPointerException"
  },
  {
    "name": "java.lang.Number",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.OutOfMemoryError"
  },
  {
    "name": "java.lang.ProcessHandle",
    "methods": [
      { "name": "current", "parameterTypes": [] },
      { "name": "pid", "parameterTypes": [] }
    ]
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.Short",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.StackTraceElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.Thread",
    "methods": [{ "name": "isVirtual", "parameterTypes": [] }]
  },
  {
    "name": "java.lang.Throwable",
    "methods": [
      { "name": "addSuppressed", "parameterTypes": ["java.lang.Throwable"] }
    ]
  },
  {
    "name": "java.lang.Void",
    "fields": [{ "name": "TYPE" }]
  },
  {
    "name": "java.lang.constant.Constable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.constant.ConstantDesc",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.management.BufferPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ClassLoadingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.CompilationMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.LockInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ManagementFactory",
    "methods": [{ "name": "getRuntimeMXBean", "parameterTypes": [] }]
  },
  {
    "name": "java.lang.management.ManagementPermission",
    "methods": [{ "name": "<init>", "parameterTypes": ["java.lang.String"] }]
  },
  {
    "name": "java.lang.management.MemoryMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryManagerMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryUsage",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MonitorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.PlatformLoggingMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getLoggerLevel", "parameterTypes": ["java.lang.String"] },
      { "name": "getLoggerNames", "parameterTypes": [] },
      { "name": "getParentLoggerName", "parameterTypes": ["java.lang.String"] },
      {
        "name": "setLoggerLevel",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      }
    ]
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "queryAllPublicMethods": true,
    "methods": [{ "name": "getInputArguments", "parameterTypes": [] }]
  },
  {
    "name": "java.lang.management.ThreadInfo",
    "queryAllPublicMethods": true,
    "fields": [{ "name": "virtual" }]
  },
  {
    "name": "java.math.BigDecimal"
  },
  {
    "name": "java.math.BigInteger"
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      }
    ]
  },
  {
    "name": "java.nio.Bits",
    "methods": [{ "name": "unaligned", "parameterTypes": [] }]
  },
  {
    "name": "java.nio.Buffer",
    "fields": [{ "name": "address" }]
  },
  {
    "name": "java.nio.ByteBuffer",
    "methods": [{ "name": "alignedSlice", "parameterTypes": ["int"] }]
  },
  {
    "name": "java.nio.DirectByteBuffer",
    "methods": [{ "name": "<init>", "parameterTypes": ["long", "int"] }]
  },
  {
    "name": "java.nio.channels.FileChannel"
  },
  {
    "name": "java.nio.channels.spi.SelectorProvider",
    "methods": [
      {
        "name": "openServerSocketChannel",
        "parameterTypes": ["java.net.ProtocolFamily"]
      },
      {
        "name": "openSocketChannel",
        "parameterTypes": ["java.net.ProtocolFamily"]
      }
    ]
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.security.interfaces.ECPrivateKey"
  },
  {
    "name": "java.security.interfaces.ECPublicKey"
  },
  {
    "name": "java.security.interfaces.RSAPrivateKey"
  },
  {
    "name": "java.security.interfaces.RSAPublicKey"
  },
  {
    "name": "java.sql.Date"
  },
  {
    "name": "java.sql.Timestamp"
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.PropertyPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.String", "java.lang.String"]
      }
    ]
  },
  {
    "name": "java.util.logging.LogManager",
    "methods": [{ "name": "getLoggingMXBean", "parameterTypes": [] }]
  },
  {
    "name": "java.util.logging.LoggingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.management.MBeanOperationInfo",
    "queryAllPublicMethods": true,
    "methods": [{ "name": "getSignature", "parameterTypes": [] }]
  },
  {
    "name": "javax.management.MBeanServerBuilder",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "name": "javax.management.openmbean.CompositeData"
  },
  {
    "name": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
  },
  {
    "name": "javax.management.openmbean.TabularData"
  },
  {
    "name": "javax.management.remote.rmi.RMIServer",
    "queryAllPublicMethods": true,
    "methods": [
      { "name": "getVersion", "parameterTypes": [] },
      { "name": "newClient", "parameterTypes": ["java.lang.Object"] }
    ]
  },
  {
    "name": "javax.management.remote.rmi.RMIServerImpl_Stub",
    "methods": [
      { "name": "<init>", "parameterTypes": ["java.rmi.server.RemoteRef"] }
    ]
  },
  {
    "name": "javax.net.ssl.SSLParameters",
    "methods": [
      {
        "name": "setApplicationProtocols",
        "parameterTypes": ["java.lang.String[]"]
      }
    ]
  },
  {
    "name": "javax.net.ssl.SSLSocket",
    "methods": [{ "name": "getApplicationProtocol", "parameterTypes": [] }]
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [{ "name": "thisX500Name" }],
    "methods": [
      { "name": "<init>", "parameterTypes": ["sun.security.x509.X500Name"] }
    ]
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [{ "name": "getUnsafe", "parameterTypes": [] }]
  },
  {
    "name": "jdk.management.jfr.ConfigurationInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.EventTypeInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBeanImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "jdk.management.jfr.RecordingInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.SettingDescriptorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "kotlin.Metadata",
    "queryAllDeclaredMethods": true,
    "methods": [
      { "name": "bv", "parameterTypes": [] },
      { "name": "d1", "parameterTypes": [] },
      { "name": "d2", "parameterTypes": [] },
      { "name": "k", "parameterTypes": [] },
      { "name": "mv", "parameterTypes": [] },
      { "name": "pn", "parameterTypes": [] },
      { "name": "xi", "parameterTypes": [] },
      { "name": "xs", "parameterTypes": [] }
    ]
  },
  {
    "name": "kotlin.Unit"
  },
  {
    "name": "kotlin.jvm.internal.DefaultConstructorMarker"
  },
  {
    "name": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "kotlinx.coroutines.flow.Flow"
  },
  {
    "name": "kotlinx.coroutines.reactor.ReactorContext"
  },
  {
    "name": "org.graalvm.polyglot.Engine",
    "methods": [{ "name": "getImpl", "parameterTypes": [] }]
  },
  {
    "name": "org.graalvm.polyglot.management.Management"
  },
  {
    "name": "org.sqlite.JDBC"
  },
  {
    "name": "reactor.core.publisher.Flux"
  },
  {
    "name": "reactor.core.publisher.Mono"
  },
  {
    "name": "sun.management.ClassLoadingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.CompilationImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$1",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryManagerImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryPoolImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.RuntimeImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [{ "name": "theUnsafe" }],
    "methods": [
      {
        "name": "copyMemory",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndAddLong",
        "parameterTypes": ["java.lang.Object", "long", "long"]
      },
      {
        "name": "getAndSetObject",
        "parameterTypes": ["java.lang.Object", "long", "java.lang.Object"]
      },
      { "name": "invokeCleaner", "parameterTypes": ["java.nio.ByteBuffer"] },
      { "name": "storeFence", "parameterTypes": [] }
    ]
  },
  {
    "name": "sun.nio.ch.SelectorImpl",
    "fields": [{ "name": "publicSelectedKeys" }, { "name": "selectedKeys" }]
  },
  {
    "name": "sun.rmi.transport.DGCImpl_Skel",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.rmi.transport.DGCImpl_Stub",
    "methods": [
      { "name": "<init>", "parameterTypes": ["java.rmi.server.RemoteRef"] }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.provider.certpath.PKIXCertPathValidator",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.rsa.PSSParameters",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA256withRSA",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$TLSContext",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [{ "name": "<init>", "parameterTypes": [] }]
  },
  {
    "name": "sun.security.util.ObjectIdentifier"
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificateExtensions"
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": ["java.lang.Boolean", "java.lang.Object"]
      }
    ]
  }
]
